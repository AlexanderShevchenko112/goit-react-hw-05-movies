{"version":3,"file":"static/js/68.9425b400.chunk.js","mappings":"iOACA,EAA0B,8BAA1B,EAAmE,+BAAnE,EAA0G,4BAA1G,EAAiJ,+BAAjJ,EAAuL,2BAAvL,EAAkO,oCAAlO,EAAoR,kCAApR,EAA6T,2B,SC+E7T,EA3EqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GACbO,MAAK,SAAAC,GAAI,OAAIJ,EAASI,EAAb,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,QAASF,EAAzB,GACf,GAAE,CAACV,IAEJ,IAAMa,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,mBAEjBC,EAAShB,EAAMgB,OACfC,EAAcjB,EAAMkB,aAE1B,OACE,iBAAKC,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMD,UAAWC,EAAcC,GAAIT,EAASU,QAA5C,sBAGA,eAAIH,UAAWC,EAAf,4BACA,iBAAKD,UAAWC,EAAhB,UACGpB,EAAMuB,cACL,gBACEC,IAAG,0CAAqCxB,EAAMuB,aAC9CE,IAAKzB,EAAM0B,kBAGf,4BACE,gBAAIP,UAAWC,EAAf,2BACe,iBAAMD,UAAWC,EAAjB,SAA4BpB,EAAM2B,QAAc,QAE/D,iBAAKR,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,2BACCH,IACC,cAAGE,UAAWC,EAAd,SAAyBH,EAAYW,MAAM,KAAK,QAGnDZ,IACC,iCACE,eAAIG,UAAWC,EAAf,sBACA,wBACGJ,EAAOa,KAAI,SAAAC,GAAK,OACf,eAAIX,UAAWC,EAAf,SACGU,EAAMC,MADqBD,EAAME,GADrB,gBAU3B,eAAIb,UAAWC,EAAf,wBACA,eAAGD,UAAWC,EAAd,cAA0BpB,EAAMiC,aAEhC,2BACE,yBACE,SAAC,KAAD,CAAMd,UAAWC,EAAUC,GAAG,OAA9B,qBAIF,yBACE,SAAC,KAAD,CAAMF,UAAWC,EAAUC,GAAG,UAA9B,0BAKJ,SAAC,EAAAa,SAAD,WACE,SAAC,KAAD,QAIP,C,uJC9ED,IAAMC,EAAU,mCAEHC,EAAoB,WAC/B,OAAOC,MAAM,2DAAD,OACiDF,IAE1D/B,MAAK,SAAAkC,GAAQ,OAAIA,EAASC,MAAb,IACbnC,MAAK,SAAAC,GAAI,OAAIA,EAAKmC,OAAT,GACb,EAEYC,EAAe,SAAAC,GAC1B,OAAOL,MAAM,qDAAD,OAC2CF,EAD3C,kBAC4DO,IAErEtC,MAAK,SAAAkC,GAAQ,OAAIA,EAASC,MAAb,IACbnC,MAAK,SAAAC,GAAI,OAAIA,EAAKmC,OAAT,GACb,EAEYrC,EAAkB,SAAAN,GAC7B,OAAOwC,MAAM,sCAAD,OAC4BxC,EAD5B,oBAC+CsC,IACzD/B,MAAK,SAAAkC,GAAQ,OAAIA,EAASC,MAAb,GAChB,EAEYI,EAAkB,SAAA9C,GAC7B,OAAOwC,MAAM,sCAAD,OAC4BxC,EAD5B,4BACuDsC,IAEhE/B,MAAK,SAAAkC,GAAQ,OAAIA,EAASC,MAAb,IACbnC,MAAK,SAAAC,GAAI,OAAIA,EAAKuC,IAAT,GACb,EAEYC,EAAkB,SAAAhD,GAC7B,OAAOwC,MAAM,sCAAD,OAC4BxC,EAD5B,4BACuDsC,IAEhE/B,MAAK,SAAAkC,GAAQ,OAAIA,EAASC,MAAb,IACbnC,MAAK,SAAAC,GAAI,OAAIA,EAAKmC,OAAT,GACb,C","sources":["webpack://react-homework-template/./src/components/pages/movieDetails/MovieDetails.module.css?919b","components/pages/movieDetails/MovieDeatails.jsx","helpers/fetchMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"MovieDetails_section__qXcYV\",\"backLink\":\"MovieDetails_backLink__cqcWo\",\"title\":\"MovieDetails_title__fNd4B\",\"subTitle\":\"MovieDetails_subTitle__1yhGC\",\"text\":\"MovieDetails_text__9H67m\",\"posterSection\":\"MovieDetails_posterSection__ZQeU6\",\"dateSection\":\"MovieDetails_dateSection__ugGOE\",\"item\":\"MovieDetails_item__VaDrB\"};","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from 'helpers/fetchMovies';\nimport css from 'components/pages/movieDetails/MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(data => setMovie(data))\n      .catch(error => console.log('Error', error));\n  }, [movieId]);\n\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? `/movies`);\n\n  const genres = movie.genres;\n  const releaseDate = movie.release_date;\n\n  return (\n    <div className={css.section}>\n      <Link className={css.backLink} to={backLink.current}>\n        Go back\n      </Link>\n      <h1 className={css.title}>Movie Details</h1>\n      <div className={css.posterSection}>\n        {movie.poster_path && (\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n            alt={movie.original_title}\n          />\n        )}\n        <div>\n          <h3 className={css.subTitle}>\n            Movie Title: <span className={css.text}>{movie.title}</span>{' '}\n          </h3>\n          <div className={css.dateSection}>\n            <h3 className={css.subTitle}>Release year:</h3>\n            {releaseDate && (\n              <p className={css.text}>{releaseDate.split('-')[0]}</p>\n            )}\n          </div>\n          {genres && (\n            <>\n              <h3 className={css.subTitle}>Genres:</h3>\n              <ul>\n                {genres.map(genre => (\n                  <li className={css.text} key={genre.id}>\n                    {genre.name}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n        </div>\n      </div>\n      <h3 className={css.subTitle}>Overview:</h3>\n      <p className={css.text}> {movie.overview}</p>\n\n      <ul>\n        <li>\n          <Link className={css.item} to=\"cast\">\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link className={css.item} to=\"reviews\">\n            Review\n          </Link>\n        </li>\n      </ul>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","const API_KEY = 'c4018622b4e004039a1f5b78df8394b2';\n\nexport const getTrendingMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n\nexport const searchMovies = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n\nexport const getMovieDetails = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  ).then(response => response.json());\n};\n\nexport const getMovieCredits = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  )\n    .then(response => response.json())\n    .then(data => data.cast);\n};\n\nexport const getMovieReviews = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n"],"names":["movieId","useParams","useState","movie","setMovie","useEffect","getMovieDetails","then","data","catch","error","console","log","location","useLocation","backLink","useRef","state","from","genres","releaseDate","release_date","className","css","to","current","poster_path","src","alt","original_title","title","split","map","genre","name","id","overview","Suspense","API_KEY","getTrendingMovies","fetch","response","json","results","searchMovies","query","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}