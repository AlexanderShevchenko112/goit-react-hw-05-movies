{"version":3,"file":"static/js/606.63f66702.chunk.js","mappings":"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","sources":["helpers/fetchMovies.js","webpack://react-homework-template/./src/pages/movieDetails/MovieDetails.module.css?3b61","pages/movieDetails/MovieDeatails.jsx"],"sourcesContent":["const API_KEY = 'c4018622b4e004039a1f5b78df8394b2';\n\nexport const getTrendingMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Response was not ok.');\n      }\n    })\n    .then(data => data.results);\n};\n\nexport const searchMovies = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Response was not ok.');\n      }\n    })\n    .then(data => data.results);\n};\n\nexport const getMovieDetails = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('Response was not ok.');\n    }\n  });\n};\n\nexport const getMovieCredits = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Response was not ok.');\n      }\n    })\n    .then(data => data.cast);\n};\n\nexport const getMovieReviews = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Response was not ok.');\n      }\n    })\n    .then(data => data.results);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"MovieDetails_section__cLNd9\",\"backLink\":\"MovieDetails_backLink__jzDuq\",\"title\":\"MovieDetails_title__-2MyV\",\"subTitle\":\"MovieDetails_subTitle__zRnEy\",\"text\":\"MovieDetails_text__B7IW3\",\"posterSection\":\"MovieDetails_posterSection__2-Lpk\",\"dateSection\":\"MovieDetails_dateSection__ZeP6l\",\"item\":\"MovieDetails_item__e-g6i\",\"noImage\":\"MovieDetails_noImage__2fzrO\"};","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from 'helpers/fetchMovies';\nimport css from 'pages/movieDetails/MovieDetails.module.css';\nimport defaultImg from 'pages/movieDetails/defaultImg.jpg';\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(data => setMovie(data))\n      .catch(error => console.log('Error', error));\n  }, [movieId]);\n\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? `/movies`);\n\n  const genres = movie.genres;\n  const releaseDate = movie.release_date;\n\n  return (\n    <div className={css.section}>\n      <Link className={css.backLink} to={backLink.current}>\n        Go back\n      </Link>\n      <h1 className={css.title}>Movie Details</h1>\n      <div className={css.posterSection}>\n        <img\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n              : defaultImg\n          }\n          alt={movie.original_title}\n          width={300}\n        />\n        <div>\n          <h3 className={css.subTitle}>\n            Movie Title: <span className={css.text}>{movie.title}</span>{' '}\n          </h3>\n          <div className={css.dateSection}>\n            <h3 className={css.subTitle}>Release year:</h3>\n            {releaseDate && (\n              <p className={css.text}>{releaseDate.split('-')[0]}</p>\n            )}\n          </div>\n          {genres && (\n            <>\n              <h3 className={css.subTitle}>Genres:</h3>\n              <ul>\n                {genres.map(genre => (\n                  <li className={css.text} key={genre.id}>\n                    {genre.name}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n        </div>\n      </div>\n      <h3 className={css.subTitle}>Overview:</h3>\n      <p className={css.text}> {movie.overview}</p>\n\n      <ul>\n        <li>\n          <Link className={css.item} to=\"cast\">\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link className={css.item} to=\"reviews\">\n            Review\n          </Link>\n        </li>\n      </ul>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","getTrendingMovies","fetch","then","response","ok","json","Error","data","results","searchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useParams","useState","movie","setMovie","useEffect","catch","error","console","log","location","useLocation","backLink","useRef","state","from","genres","releaseDate","release_date","className","css","to","current","src","poster_path","defaultImg","alt","original_title","width","title","split","map","genre","name","id","overview","Suspense"],"sourceRoot":""}